plugins {
	java
	id("org.springframework.boot") version "3.1.4"
	id("io.spring.dependency-management") version "1.1.3"
	id ("org.liquibase.gradle") version "2.2.0"
	application
	jacoco
	id("io.freefair.lombok") version "8.2.2"
}

group = "hexlet.code"
version = "0.0.1-SNAPSHOT"

java {
	sourceCompatibility = JavaVersion.VERSION_20
}

configurations {
	compileOnly {
		extendsFrom(configurations.annotationProcessor.get())
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
//	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("com.h2database:h2")
	implementation("org.postgresql:postgresql")
	implementation("org.liquibase:liquibase-core")
	implementation("org.springframework.boot:spring-boot-starter-validation")

	liquibaseRuntime("org.liquibase:liquibase-core")
	liquibaseRuntime ("info.picocli:picocli:4.7.1")
	liquibaseRuntime ("org.liquibase.ext:liquibase-hibernate6:4.21.1")
//	liquibaseRuntime (sourceSets.main.get().output)
	liquibaseRuntime ("org.springframework.boot:spring-boot-starter-data-jpa")
	liquibaseRuntime ("com.h2database:h2")

	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
	annotationProcessor("org.projectlombok:lombok")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.security:spring-security-test")
}

tasks.withType<Test> {
	useJUnitPlatform()
}

application {
	mainClass.set("hexlet.code.AppApplication")
}

tasks.register("stage") {
	dependsOn("installDist")
	doLast {
	}
}

tasks.jacocoTestReport {
	dependsOn(tasks.test) // tests are required to run before generating the report
	reports {
		xml.required.set(true)
		csv.required.set(false)
		html.outputLocation.set(layout.buildDirectory.dir("jacocoHtml"))
	}
}

tasks.diffChangelog {
	dependsOn(tasks.compileJava)
}

liquibase {
	activities.register("main") {
		this.arguments = mapOf(
				"changelogFile" to "src/main/resources/db/changelog/db.changelog-master.yaml",
				"url" to "jdbc:h2:./devtmdb",
				"referenceDriver" to "liquibase.ext.hibernate.database.connection.HibernateDriver",
				"referenceUrl" to "hibernate:spring:hexlet.code.model.?dialect=org.hibernate.dialect.H2Dialect&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
				"username" to "sa",
				"password" to "sa"
		)
	}
}


